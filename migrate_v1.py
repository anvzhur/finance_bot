# migrate_to_prod.py
import asyncio
import asyncpg
from config import DATABASE_URL

async def migrate():
    conn = await asyncpg.connect(DATABASE_URL)

    print("üîß –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # 1. –î–æ–±–∞–≤–ª—è–µ–º organisation_name –≤ users
    try:
        await conn.execute("ALTER TABLE users ADD COLUMN organisation_name TEXT;")
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü 'organisation_name' –≤ —Ç–∞–±–ª–∏—Ü—É 'users'")
    except asyncpg.exceptions.DuplicateColumnError:
        print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'organisation_name' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ organisation_name: {e}")

    # 2. –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É user_operations
    try:
        await conn.execute("""
            CREATE TABLE IF NOT EXISTS user_operations (
                id SERIAL PRIMARY KEY,
                telegram_id BIGINT NOT NULL,
                operation_type TEXT NOT NULL CHECK (operation_type IN ('income', 'expense')),
                operation_date DATE NOT NULL
            )
        """)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ 'user_operations'")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ user_operations: {e}")

    await conn.close()
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ë–∞–∑–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.")

if __name__ == "__main__":
    asyncio.run(migrate())